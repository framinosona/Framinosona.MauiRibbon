<Project Sdk="Microsoft.NET.Sdk">
   <!-- ==================== BUILD VARIABLES ==================== -->
   <PropertyGroup>
        <Package_Name>Framinosona.MauiRibbon</Package_Name>
        <Package_Tags>Framinosona;UI;Tools;Banner;Net8</Package_Tags>
        <Package_Copyright>Francois Raminosona</Package_Copyright>
        <Package_Description>Maui Ribbon is a simple and easy to use ribbon control for Microsoft.Maui</Package_Description>
    </PropertyGroup>

    <PropertyGroup>
        <TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>

        <Deterministic>true</Deterministic>

        <Optimize Condition=" '$(Configuration)' == 'Debug' ">false</Optimize>
        <Optimize Condition=" '$(Configuration)' == 'Release' ">true</Optimize>

        <DebugSymbols>true</DebugSymbols>
        <OutputType>Library</OutputType>

        <!-- this is set to true only in from within our build scripts -->

        <GeneratePackageOnBuild Condition=" '$(GeneratePackageOnBuild)' == '' ">false</GeneratePackageOnBuild>
        <PackOnBuild>$(GeneratePackageOnBuild)</PackOnBuild>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
    </PropertyGroup>

    <!-- ==================== PACKAGING ==================== -->
    <PropertyGroup>
        <!-- Package_Name -->
        <RootNamespace>$(Package_Name)</RootNamespace>
        <PackageId>$(Package_Name)</PackageId>
        <AssemblyName>$(Package_Name)</AssemblyName>
        <Title>$(Package_Name)</Title>

        <!-- Package_Copyright -->
        <Owners>$(Package_Copyright)</Owners>
        <Authors>$(Package_Copyright)</Authors>
        <Copyright>$(Package_Copyright)</Copyright>

        <!-- Package_Description -->
        <Summary>$(Package_Description)</Summary>
        <Description>$(Package_Description)</Description>
        <PackageDescription>$(Package_Description)</PackageDescription>

        <!-- Extra files and properties -->
        <PackageTags>$(Package_Tags)</PackageTags>
        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">$([System.IO.Path]::Combine($(MSBuildThisFileDirectory), `../Artifacts/`))</PackageOutputPath>

        <PackageIconPath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `icon.png`))</PackageIconPath>
        <PackageReadMePath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `../README.md`))</PackageReadMePath>
        <PackageLicencePath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory), `../LICENSE`))</PackageLicencePath>

        <PackageIcon Condition="Exists('$(PackageIconPath)')">icon.png</PackageIcon>
        <PackageReadmeFile Condition="Exists('$(PackageReadMePath)')">README.md</PackageReadmeFile>
        <PackageLicense Condition="Exists('$(PackageLicencePath)')">LICENSE</PackageLicense>
    </PropertyGroup>
    <ItemGroup>
        <None Include="$(PackageIconPath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageIconPath)')"/>
        <None Include="$(PackageReadMePath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageReadMePath)')"/>
        <None Include="$(PackageLicencePath)" Pack="true" PackagePath="\" Condition="Exists('$(PackageLicencePath)')"/>
    </ItemGroup>

    <!-- ==================== LOGGING ==================== -->
    <Target Name="PrintBuildInfo" BeforeTargets="CoreCompile">
        <Message Importance="High" Text="PackageId           : $(PackageId)              "/>
        <Message Importance="High" Text="Version             : $(Version)                "/>
        <Message Importance="High" Text="Platform            : $(Platform)               "/>
        <Message Importance="High" Text="Configuration       : $(Configuration)          "/>
        <Message Importance="High" Text="PackageVersion      : $(PackageVersion)         "/>
        <Message Importance="High" Text="TargetFramework     : $(TargetFramework)        "/>
        <Message Importance="High" Text="AssemblyVersion     : $(AssemblyVersion)        "/>
        <Message Importance="High" Text="DefineConstants     : $(DefineConstants)        "/>
        <Message Importance="High" Text="MSBuildRuntimeType  : $(MSBuildRuntimeType)     "/>
        <Message Importance="High" Text="AssemblyFileVersion : $(AssemblyFileVersion)    "/>
    </Target>

    <!-- ==================== SOURCELINK ==================== -->
    <PropertyGroup>
        <!-- https://github.com/dotnet/sourcelink -->
        <!-- sourcelink: Declare that the Repository URL can be published to NuSpec -->
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb;.md</AllowedOutputExtensionsInPackageBuildOutputFolder>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)"/>
        <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)"/>
    </ItemGroup>

</Project>
